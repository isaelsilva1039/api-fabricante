<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="java_core_api.api_java_core.mapper.PrecoItemMercadoMapper">

    <insert id="upsertPreco" parameterType="java_core_api.api_java_core.domain.PrecoItemMercado">
        INSERT INTO cadastro.preco_item_mercado (
        id_produto_item,
        id_mercado,
        preco,
        data_coleta
        ) VALUES (
        #{produtoItem.id},
        #{mercado.id},
        #{preco},
        #{dataColeta}
        )
        ON CONFLICT (id_produto_item, id_mercado)
        DO UPDATE SET
        preco = EXCLUDED.preco,
        data_coleta = EXCLUDED.data_coleta
    </insert>

    <select id="buscarTodos" resultMap="precoItemMercadoDTOMap">
        SELECT
        pim.id_produto_item,
        pi.codigo_barras,
        pi.descricao AS nome_produto,
        pim.id_mercado,
        m.razao_social AS nome_mercado,
        pim.preco,
        pim.data_coleta
        e.logradouro || ' ' || e.numero || COALESCE(' ' || e.complemento, '') AS endereco,
        e.cidade_nome AS cidade,
        e.estado_nome AS estado
        FROM
        cadastro.preco_item_mercado pim
        LEFT JOIN
        cadastro.produto_item pi ON pi.id = pim.id_produto_item
        LEFT JOIN
        cadastro.mercado m ON m.id = pim.id_mercado
        LEFT JOIN
        cadastro.endereco e ON e.id = m.id_endereco
    </select>


    <select id="buscarPaginado" resultMap="precoItemMercadoDTOMap">
        SELECT
        pim.id_produto_item,
        pi.codigo_barras,
        pi.descricao AS nome_produto,
        pim.id_mercado,
        m.razao_social AS nome_mercado,
        pim.preco,
        pim.data_coleta,
        e.logradouro || ' ' || e.numero || COALESCE(' ' || e.complemento, '') AS endereco,
        e.cidade_nome AS cidade,
        e.estado_nome AS estado
        FROM
        cadastro.preco_item_mercado pim
        LEFT JOIN
        cadastro.produto_item pi ON pi.id = pim.id_produto_item
        LEFT JOIN
        cadastro.mercado m ON m.id = pim.id_mercado
        LEFT JOIN
        cadastro.endereco e ON e.id = m.id_endereco
        <if test="latitude != null and longitude != null and raioKm != null">
            WHERE
            (
            6378 * acos(
            cos(radians(#{latitude}))
            * cos(radians(m.latitude))
            * cos(radians(m.longitude) - radians(#{longitude}))
            + sin(radians(#{latitude}))
            * sin(radians(m.latitude))
            )
            ) &lt;= #{raioKm}
        </if>
        ORDER BY pim.data_coleta DESC
        LIMIT #{size} OFFSET #{offset}
    </select>


    <select id="buscarPorProdutoOrdenadoPorPreco" resultMap="precoItemMercadoDTOMap">
        SELECT
        pim.id_produto_item,
        pi.codigo_barras,
        pi.descricao AS nome_produto,
        pim.id_mercado,
        m.razao_social AS nome_mercado,
        pim.preco,
        pim.data_coleta,
        e.logradouro || ' ' || e.numero || COALESCE(' ' || e.complemento, '') AS endereco,
        e.cidade_nome AS cidade,
        e.estado_nome AS estado
        FROM
        cadastro.preco_item_mercado pim
        LEFT JOIN
        cadastro.produto_item pi ON pi.id = pim.id_produto_item
        LEFT JOIN
        cadastro.mercado m ON m.id = pim.id_mercado
        LEFT JOIN
        cadastro.endereco e ON e.id = m.id_endereco
        WHERE
        pim.id_produto_item = #{idProdutoItem}
        <if test="latitude != null and longitude != null and raioKm != null">
            AND
            (
            6378 * acos(
            cos(radians(#{latitude}))
            * cos(radians(m.latitude))
            * cos(radians(m.longitude) - radians(#{longitude}))
            + sin(radians(#{latitude}))
            * sin(radians(m.latitude))
            )
            ) &lt;= #{raioKm}
        </if>
        ORDER BY
        pim.preco ASC
    </select>


    <select id="buscarPorProdutoPorCidade" resultMap="precoItemMercadoDTOMap">
        SELECT
        pim.id_produto_item,
        pi.codigo_barras,
        pi.descricao AS nome_produto,
        pim.id_mercado,
        m.razao_social AS nome_mercado,
        pim.preco,
        pim.data_coleta,
        e.logradouro || ' ' || e.numero || COALESCE(' ' || e.complemento, '') AS endereco,
        e.cidade_nome AS cidade,
        e.estado_nome AS estado
        FROM
        cadastro.preco_item_mercado pim
        LEFT JOIN
        cadastro.produto_item pi ON pi.id = pim.id_produto_item
        LEFT JOIN
        cadastro.mercado m ON m.id = pim.id_mercado
        LEFT JOIN
        cadastro.endereco e ON e.id = m.id_endereco

        WHERE
        pim.id_produto_item = #{idProdutoItem}
        AND e.cidade_nome like #{cidade}
        ORDER BY
        pim.preco ASC
    </select>


    <select id="buscarPorProdutosPorCidade" resultMap="precoItemMercadoDTOMap">
        SELECT
        pim.id_produto_item,
        pi.codigo_barras,
        pi.descricao AS nome_produto,
        pim.id_mercado,
        m.razao_social AS nome_mercado,
        pim.preco,
        pim.data_coleta,
        e.logradouro || ' ' || e.numero || COALESCE(' ' || e.complemento, '') AS endereco,
        e.cidade_nome AS cidade,
        e.estado_nome AS estado
        FROM
        cadastro.preco_item_mercado pim
        LEFT JOIN
        cadastro.produto_item pi ON pi.id = pim.id_produto_item
        LEFT JOIN
        cadastro.mercado m ON m.id = pim.id_mercado
        LEFT JOIN
        cadastro.endereco e ON e.id = m.id_endereco
        WHERE
         e.cidade_nome like #{cidade}
        ORDER BY
        pim.preco ASC
    </select>

    <resultMap id="precoItemMercadoDTOMap" type="java_core_api.api_java_core.dtos.PrecoItemMercadoDTO">
        <result property="idProdutoItem" column="id_produto_item"/>
        <result property="codigoBarras" column="codigo_barras"/>
        <result property="nomeProduto" column="nome_produto"/>
        <result property="idMercado" column="id_mercado"/>
        <result property="nomeMercado" column="nome_mercado"/>
        <result property="preco" column="preco"/>
        <result property="dataColeta" column="data_coleta"/>
    </resultMap>

</mapper>
