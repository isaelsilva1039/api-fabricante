name: Deploy para VPS

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    continue-on-error: true   # <- ADICIONA ISSO!

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Registrar início do deploy
        run: echo "DATA_INICIO=$(date '+%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV

      - name: Deploy via SSH
        id: deploy_step
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/api-pega-preco
            git pull origin main
            ./mvnw clean package -DskipTests
            docker-compose up -d --build

      - name: Registrar fim do deploy
        run: echo "DATA_FIM=$(date '+%d/%m/%Y %H:%M:%S')" >> $GITHUB_ENV

      - name: Notificar Telegram - sucesso
        if: ${{ success() }}
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="✅ *Deploy realizado com sucesso!* 🚀%0A%0A🕓 *Iniciado:* ${{ env.DATA_INICIO }}%0A🕓 *Finalizado:* ${{ env.DATA_FIM }}%0A👤 *Usuário:* ${{ github.actor }}%0A📊 *Status:* Sucesso ✅"

      - name: Notificar Telegram - erro
        if: ${{ failure() }}
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="❌ *Deploy falhou!* 🚨%0A%0A🕓 *Iniciado:* ${{ env.DATA_INICIO }}%0A🕓 *Finalizado:* $(date '+%d/%m/%Y %H:%M:%S')%0A👤 *Usuário:* ${{ github.actor }}%0A📊 *Status:* Falhou ❌"
